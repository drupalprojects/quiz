<?php

/**
 * @file
 * Unit tests for the matching Module.
 */

/**
 * Test class for matching questions.
 */
class MatchingTestCase extends QuizQuestionTestCase {

  // initializing attributes
  var $question_node_type = 'matching';
  var $title = '';
  var $body = '';

  public static function getInfo() {
    return array(
      'name' => t('Matching'),
      'description' => t('Unit test for matching question type.'),
      'group' => t('Quiz'),
    );
  }

  function setUp() {
    parent::setUp(array('matching'));
  }

  /**
   * function to create true false type question node for testing.
   */
  public function testCreateQuizQuestion() {
    // matching question node attributes
    $this->title = $this->randomName();
    $this->body = $this->randomName();

    // array of node attributes to create a test node
    $settings = array(
      'type' => $this->question_node_type,
      'title' => $this->title,
      'body' => array(LANGUAGE_NONE => array(array('value' => $this->body))),
      'revisions' => TRUE,
      'choice_penalty' => 0,
    );

    $this->match = array();
    $form_size = variable_get('quiz_matching_form_size', 5);
    // generate rand match question, answer and feedback
    for ($i = 1; $i < $form_size; $i++) {
      $settings['match'][$i]['question'] = $this->match[$i]['question'] = $this->randomName();
      $settings['match'][$i]['answer'] = $this->match[$i]['answer'] = $this->randomName();
      $settings['match'][$i]['feedback'] = $this->match[$i]['feedback'] = $this->randomName();
    }

    // create drupal node
    $node = $this->drupalCreateNode($settings);
    $load = node_load($node->nid);

    // @todo verify save

    return $load;
  }

}
